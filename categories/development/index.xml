<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Development on Kristoffer Lind - Developer, Technologist, Blogger</title><link>https://www.lind.sh/categories/development/</link><description>Recent content in Development on Kristoffer Lind - Developer, Technologist, Blogger</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 22 Dec 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://www.lind.sh/categories/development/index.xml" rel="self" type="application/rss+xml"/><item><title>Cost of microservices</title><link>https://www.lind.sh/blog/cost-of-microservices/</link><pubDate>Wed, 22 Dec 2021 00:00:00 +0000</pubDate><guid>https://www.lind.sh/blog/cost-of-microservices/</guid><description>Microservices are great; they&amp;rsquo;re fun to build and run. You&amp;rsquo;ll have lots of interesting new problems to tackle. That does however also mean that you&amp;rsquo;ll need to be reaping quite a bit of benefits from it for it to be a reasonable business choice. So what are the costs? what are the benefits?
Interesting problems The associated technical problems are very interesting, which will likely help with both recruitment and keeping those developers from being bored out of their minds and quitting (unless you have interesting business problems).</description></item><item><title>Running dotnet containers in kubernetes</title><link>https://www.lind.sh/blog/dotnet-containers-in-kubernetes/</link><pubDate>Sat, 04 Dec 2021 00:00:00 +0000</pubDate><guid>https://www.lind.sh/blog/dotnet-containers-in-kubernetes/</guid><description>There are some caveats to running dotnet in containers. You might expect that the docker images you pulled from Microsoft&amp;rsquo;s container registry were checked for vulnerabilities and prepared to run in a containerized environment. If you&amp;rsquo;ve gone with defaults and don&amp;rsquo;t have strict rules on your cluster you&amp;rsquo;ll have an image configured to run alone on a server (which is not a usual setup in a containerized environment) that is also full of known vulnerabilities even when fresh.</description></item><item><title>Hugo performance optimizations</title><link>https://www.lind.sh/blog/hugo-theme-performance-optimizations/</link><pubDate>Sun, 21 Nov 2021 00:00:00 +0000</pubDate><guid>https://www.lind.sh/blog/hugo-theme-performance-optimizations/</guid><description>To have a silky smooth start you&amp;rsquo;ll need any code that affects layout to be included in the first render. Ideally you should fit all HTML and CSS needed by first render within 14KB (search for TCP slow start to dig deeper). Size of images needs to be predetermined so that rendering them won&amp;rsquo;t affect layout. There shouldn&amp;rsquo;t be any JS that affect layout either.
User first/Content first The reason users come to your site is to consume your content (read your posts, buy your product or whatever).</description></item><item><title>Switching blog engine to Hugo</title><link>https://www.lind.sh/blog/switching-blog-engine-to-hugo/</link><pubDate>Sat, 20 Nov 2021 00:00:00 +0000</pubDate><guid>https://www.lind.sh/blog/switching-blog-engine-to-hugo/</guid><description>Will this blog be entirely meta? a blog about a blog? Who knows? :) A collection of notes and thoughts from switching from Gatsby to Hugo, why I did it and a bit of comparison.
Why? The fact that Gatsby included tons of javascript for pretty much no functionality bothered me and I wanted to try something else. Hugo seemed like a good choice. It&amp;rsquo;s popular, supposedly really fast and seemed to do what I wanted it to and not much else, meaning it should be simple.</description></item><item><title>Getting a blog the hard way</title><link>https://www.lind.sh/blog/getting-a-blog-the-hard-way/</link><pubDate>Sun, 10 Mar 2019 00:00:00 +0000</pubDate><guid>https://www.lind.sh/blog/getting-a-blog-the-hard-way/</guid><description>The hard way is a path focused on learning, you should follow/replicate this if your aim is gaining knowledge. This post will serve as an overview, while going into a bit more details for sections where there&amp;rsquo;s no separate post planned. Expect a lot of deep dives searching, especially if you do it before the detailed posts are available.
If you&amp;rsquo;re more interested in the end result, follow these steps instead:</description></item></channel></rss>