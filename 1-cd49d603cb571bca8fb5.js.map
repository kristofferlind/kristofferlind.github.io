{"version":3,"sources":["webpack:///./src/styles/colors.ts","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/website-config.ts","webpack:///./src/styles/shared.ts","webpack:///./src/components/Wrapper.tsx","webpack:///./src/layouts/index.tsx","webpack:///./src/components/PostCard.tsx","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/header/SiteNavLogo.tsx","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/favicon.ico"],"names":["__webpack_require__","d","__webpack_exports__","colors","blue","green","purple","yellow","red","darkgrey","midgrey","lightgrey","whitegrey","pink","brown","StaticQueryContext","React","createContext","StaticQuery","props","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","Consumer","staticQueryData","data","query","render","children","propTypes","PropTypes","object","string","isRequired","func","config","title","description","coverImage","lang","siteUrl","showSubscribe","mailchimpAction","mailchimpName","outer","name","styles","inner","SiteMain","SiteTitle","_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__","target","SiteDescription","PostFeed","PostFeedRaise","SocialLink","SiteHeader","css","darken","SiteHeaderContent","AuthorProfileImage","lighten","StyledWrapper","Wrapper","_ref","className","_emotion_core__WEBPACK_IMPORTED_MODULE_1__","GlobalStyles","IndexLayout","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","a","rel","href","favicon","type","PostCardStyles","PostCardImageLink","PostCardImage","_emotion_styled_base__WEBPACK_IMPORTED_MODULE_1__","PostCardContent","PostCardContentLink","PostCardTags","PostCardTitle","PostCardExcerpt","PostCardMeta","AuthorList","AuthorListItem","AuthorNameTooltip","StaticAvatar","ReadingTime","PostCard","post","_emotion_core__WEBPACK_IMPORTED_MODULE_2__","frontmatter","image","gatsby__WEBPACK_IMPORTED_MODULE_3__","to","fields","slug","childImageSharp","fluid","gatsby_image__WEBPACK_IMPORTED_MODULE_4___default","alt","style","height","tags","excerpt","author","id","_","src","avatar","fixed","timeToRead","m","module","exports","require","default","SiteNavLogoStyles","SiteNavLogo","logo","_public_static_d_1396328160_json__WEBPACK_IMPORTED_MODULE_2__","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","createElement","InternalPageRenderer","assign","json","shape","p"],"mappings":"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","file":"1-cd49d603cb571bca8fb5.js","sourcesContent":["export const colors = {\n  blue: '#3eb0ef',\n  green: '#a4d037',\n  purple: '#ad26b4',\n  yellow: '#fecd35',\n  red: '#f05230',\n  darkgrey: '#15171A',\n  midgrey: '#738a94',\n  lightgrey: '#c5d2d9',\n  whitegrey: '#e5eff5',\n  pink: '#fa3a57',\n  brown: '#a3821a',\n}","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","export interface WebsiteConfig {\n  title: string;\n  description: string;\n  coverImage: string;\n  logo: string;\n  /**\n   * Specifying a valid BCP 47 language helps screen readers announce text properly.\n   * See: https://dequeuniversity.com/rules/axe/2.2/valid-lang\n   */\n  lang: string;\n  /**\n   * blog full path, no ending slash!\n   */\n  siteUrl: string;\n  facebook?: string;\n  twitter?: string;\n  /**\n   * hide or show all email subscribe boxes\n   */\n  showSubscribe: boolean;\n  /**\n   * create a list on mailchimp and then create an embeddable signup form. this is the form action\n   */\n  mailchimpAction?: string;\n  /**\n   * this is the hidden input field name\n   */\n  mailchimpName?: string;\n}\n\nconst config: WebsiteConfig = {\n  title: 'Lind.sh',\n  description: `Hello! I'm Kristoffer Lind; javascripter and devopser`,\n  coverImage: 'img/blog-cover.jpg',\n  // logo: 'img/ghost-logo.png',\n  lang: 'en',\n  siteUrl: 'https://lind.sh',\n  // facebook: 'https://www.facebook.com/ghost',\n  // twitter: 'https://twitter.com/tryghost',\n  showSubscribe: true,\n  mailchimpAction: 'https://lind.us20.list-manage.com/subscribe/post?u=6f4ed2715c519b6f2c207f01d&amp;id=f1c2a86ad5',\n  mailchimpName: 'b_6f4ed2715c519b6f2c207f01d_f1c2a86ad5',\n};\n\nexport default config;\n","import { css } from '@emotion/core';\nimport styled from '@emotion/styled'\nimport { colors } from './colors';\nimport { darken, lighten } from 'polished';\n\nexport const outer = css`\n  position: relative;\n  padding: 0 4vw;\n`;\n\n// Centered content container blocks\nexport const inner = css`\n  margin: 0 auto;\n  max-width: 1040px;\n  width: 100%;\n`;\n\nexport const SiteMain = css`\n  z-index: 100;\n  flex-grow: 1;\n`;\n\nexport const SiteTitle = styled.h1`\n  z-index: 10;\n  margin: 0;\n  padding: 0;\n  font-size: 3.8rem;\n  font-weight: 700;\n`;\n\nexport const SiteDescription = styled.h2`\n  z-index: 10;\n  margin: 0;\n  padding: 5px 0;\n  font-size: 2.2rem;\n  font-weight: 300;\n  letter-spacing: 0.5px;\n  opacity: 0.8;\n`;\n\nexport const PostFeed = css`\n  position: relative;\n  display: flex;\n  flex-wrap: wrap;\n  margin: 0 -20px;\n  padding: 40px 0 0 0;\n`;\n\nexport const PostFeedRaise = css`\n  @media (min-width: 900px) {\n    margin-top: -70px;\n    padding-top: 0;\n  }\n`;\n\nexport const SocialLink = css`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin: 0;\n  padding: 10px;\n  color: #fff;\n  opacity: 0.8;\n\n  :hover {\n    opacity: 1;\n  }\n\n  svg {\n    height: 1.8rem;\n    fill: #fff;\n  }\n`;\n\nexport const SiteHeader = css`\n  position: relative;\n  padding-top: 12px;\n  padding-bottom: 12px;\n  color: #fff;\n  /* background: color(var(--darkgrey) l(-5%)) no-repeat center center; */\n  background: ${darken('0.05', colors.darkgrey)} no-repeat center center;\n  background-size: cover;\n`;\n\nexport const SiteHeaderContent = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  padding: 10vw 4vw;\n  min-height: 200px;\n  max-height: 450px;\n  text-align: center;\n`;\n\nexport const SiteHeaderStyles = css`\n  content: '';\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: auto;\n  left: 0;\n  z-index: 10;\n  display: block;\n  height: 80px;\n  background: linear-gradient(rgba(0, 0, 0, 0.1), rgba(0, 0, 0, 0));\n\n  :before {\n    content: '';\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    z-index: 10;\n    display: block;\n    background: rgba(0, 0, 0, 0.18);\n  }\n\n  :after {\n    content: '';\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: auto;\n    left: 0;\n    z-index: 10;\n    display: block;\n    height: 80px;\n    background: linear-gradient(rgba(0, 0, 0, 0.1), rgba(0, 0, 0, 0));\n  }\n  @media (max-width: 700px) {\n    padding-right: 0;\n    padding-left: 0;\n  }\n`;\n\nexport const AuthorProfileImage = css`\n  display: block;\n  /* background: color(var(--lightgrey) l(+10%)); */\n  background: ${lighten('0.1', colors.lightgrey)};\n  border-radius: 100%;\n  object-fit: cover;\n  margin-right: 15px;\n  width: 60px;\n  height: 60px;\n`;\n","import * as React from 'react';\nimport styled from '@emotion/styled'\n\nconst StyledWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  min-height: 100vh;\n`;\n\ninterface WrapperProps {\n  className?: string;\n}\n\nconst Wrapper: React.FunctionComponent<WrapperProps> = ({ children, className }) => (\n  <StyledWrapper className={className}>{children}</StyledWrapper>\n);\n\nexport default Wrapper;\n","import { Global, css } from '@emotion/core';\nimport { darken, lighten } from 'polished';\nimport * as React from 'react';\nimport Helmet from 'react-helmet';\n\nimport { colors } from '../styles/colors';\n// @ts-ignore\nimport favicon from '../../src/favicon.ico';\n\ninterface IndexProps {\n  className?: string;\n}\n\nconst GlobalStyles = css`\n  html,\n  body,\n  div,\n  span,\n  applet,\n  object,\n  iframe,\n  h1,\n  h2,\n  h3,\n  h4,\n  h5,\n  h6,\n  p,\n  blockquote,\n  pre,\n  a,\n  abbr,\n  acronym,\n  address,\n  big,\n  cite,\n  code,\n  del,\n  dfn,\n  em,\n  img,\n  ins,\n  kbd,\n  q,\n  s,\n  samp,\n  small,\n  strike,\n  strong,\n  sub,\n  sup,\n  tt,\n  var,\n  dl,\n  dt,\n  dd,\n  ol,\n  ul,\n  li,\n  fieldset,\n  form,\n  label,\n  legend,\n  table,\n  caption,\n  tbody,\n  tfoot,\n  thead,\n  tr,\n  th,\n  td,\n  article,\n  aside,\n  canvas,\n  details,\n  embed,\n  figure,\n  figcaption,\n  footer,\n  header,\n  hgroup,\n  menu,\n  nav,\n  output,\n  ruby,\n  section,\n  summary,\n  time,\n  mark,\n  audio,\n  video {\n    margin: 0;\n    padding: 0;\n    border: 0;\n    font: inherit;\n    font-size: 100%;\n    vertical-align: baseline;\n  }\n  body {\n    line-height: 1;\n  }\n  ol,\n  ul {\n    list-style: none;\n  }\n  blockquote,\n  q {\n    quotes: none;\n  }\n  blockquote:before,\n  blockquote:after,\n  q:before,\n  q:after {\n    content: '';\n    content: none;\n  }\n  table {\n    border-spacing: 0;\n    border-collapse: collapse;\n  }\n  img {\n    max-width: 100%;\n  }\n  html {\n    box-sizing: border-box;\n    font-family: sans-serif;\n\n    -ms-text-size-adjust: 100%;\n    -webkit-text-size-adjust: 100%;\n  }\n  *,\n  *:before,\n  *:after {\n    box-sizing: inherit;\n  }\n  a {\n    background-color: transparent;\n  }\n  a:active,\n  a:hover {\n    outline: 0;\n  }\n  b,\n  strong {\n    font-weight: bold;\n  }\n  i,\n  em,\n  dfn {\n    font-style: italic;\n  }\n  h1 {\n    margin: 0.67em 0;\n    font-size: 2em;\n  }\n  small {\n    font-size: 80%;\n  }\n  sub,\n  sup {\n    position: relative;\n    font-size: 75%;\n    line-height: 0;\n    vertical-align: baseline;\n  }\n  sup {\n    top: -0.5em;\n  }\n  sub {\n    bottom: -0.25em;\n  }\n  img {\n    border: 0;\n  }\n  svg:not(:root) {\n    overflow: hidden;\n  }\n  mark {\n    background-color: #fdffb6;\n  }\n  code,\n  kbd,\n  pre,\n  samp {\n    font-family: monospace, monospace;\n    font-size: 1em;\n  }\n  button,\n  input,\n  optgroup,\n  select,\n  textarea {\n    margin: 0;\n    color: inherit;\n    font: inherit;\n  }\n  button {\n    overflow: visible;\n    border: none;\n  }\n  button,\n  select {\n    text-transform: none;\n  }\n  button,\n  html input[type='button'],\n  input[type='reset'],\n  input[type='submit'] {\n    cursor: pointer;\n\n    -webkit-appearance: button;\n  }\n  button[disabled],\n  html input[disabled] {\n    cursor: default;\n  }\n  button::-moz-focus-inner,\n  input::-moz-focus-inner {\n    padding: 0;\n    border: 0;\n  }\n  input {\n    line-height: normal;\n  }\n  input:focus {\n    outline: none;\n  }\n  input[type='checkbox'],\n  input[type='radio'] {\n    box-sizing: border-box;\n    padding: 0;\n  }\n  input[type='number']::-webkit-inner-spin-button,\n  input[type='number']::-webkit-outer-spin-button {\n    height: auto;\n  }\n  input[type='search'] {\n    box-sizing: content-box;\n\n    -webkit-appearance: textfield;\n  }\n  input[type='search']::-webkit-search-cancel-button,\n  input[type='search']::-webkit-search-decoration {\n    -webkit-appearance: none;\n  }\n  legend {\n    padding: 0;\n    border: 0;\n  }\n  textarea {\n    overflow: auto;\n  }\n  table {\n    border-spacing: 0;\n    border-collapse: collapse;\n  }\n  td,\n  th {\n    padding: 0;\n  }\n\n  html {\n    overflow-x: hidden;\n    overflow-y: scroll;\n    font-size: 62.5%;\n\n    -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n  }\n  body {\n    overflow-x: hidden;\n    color: ${darken('0.25', colors.midgrey)};\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell,\n      'Open Sans', 'Helvetica Neue', sans-serif;\n    font-size: 1.5rem;\n    line-height: 1.6em;\n    font-weight: 400;\n    font-style: normal;\n    letter-spacing: 0;\n    text-rendering: optimizeLegibility;\n    background: #fff;\n\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n    -moz-font-feature-settings: 'liga' on;\n  }\n\n  ::selection {\n    text-shadow: none;\n    background: ${lighten('0.3', colors.blue)};\n  }\n\n  hr {\n    position: relative;\n    display: block;\n    width: 100%;\n    margin: 2.5em 0 3.5em;\n    padding: 0;\n    height: 1px;\n    border: 0;\n    border-top: 1px solid ${lighten('0.1', colors.lightgrey)};\n  }\n\n  audio,\n  canvas,\n  iframe,\n  img,\n  svg,\n  video {\n    vertical-align: middle;\n  }\n\n  fieldset {\n    margin: 0;\n    padding: 0;\n    border: 0;\n  }\n\n  textarea {\n    resize: vertical;\n  }\n\n  p,\n  ul,\n  ol,\n  dl,\n  blockquote {\n    margin: 0 0 1.5em 0;\n  }\n\n  ol,\n  ul {\n    padding-left: 1.3em;\n    padding-right: 1.5em;\n  }\n\n  ol ol,\n  ul ul,\n  ul ol,\n  ol ul {\n    margin: 0.5em 0 1em;\n  }\n\n  ul {\n    list-style: disc;\n  }\n\n  ol {\n    list-style: decimal;\n  }\n\n  ul,\n  ol {\n    max-width: 100%;\n  }\n\n  li {\n    margin: 0.5em 0;\n    padding-left: 0.3em;\n    line-height: 1.6em;\n  }\n\n  dt {\n    float: left;\n    margin: 0 20px 0 0;\n    width: 120px;\n    color: ${colors.darkgrey};\n    font-weight: 500;\n    text-align: right;\n  }\n\n  dd {\n    margin: 0 0 5px 0;\n    text-align: left;\n  }\n\n  blockquote {\n    margin: 1.5em 0;\n    padding: 0 1.6em 0 1.6em;\n    border-left: ${colors.whitegrey} 0.5em solid;\n  }\n\n  blockquote p {\n    margin: 0.8em 0;\n    font-size: 1.2em;\n    font-weight: 300;\n  }\n\n  blockquote small {\n    display: inline-block;\n    margin: 0.8em 0 0.8em 1.5em;\n    font-size: 0.9em;\n    opacity: 0.8;\n  }\n\n  blockquote small:before {\n    content: '\\\\2014 \\\\00A0';\n  }\n\n  blockquote cite {\n    font-weight: bold;\n  }\n  blockquote cite a {\n    font-weight: normal;\n  }\n\n  a {\n    color: ${darken('0.05', colors.blue)};\n    text-decoration: none;\n  }\n\n  a:hover {\n    text-decoration: underline;\n  }\n\n  h1,\n  h2,\n  h3,\n  h4,\n  h5,\n  h6 {\n    margin-top: 0;\n    line-height: 1.15;\n    font-weight: 700;\n    text-rendering: optimizeLegibility;\n  }\n\n  h1 {\n    margin: 0 0 0.5em 0;\n    font-size: 5rem;\n    font-weight: 700;\n  }\n  @media (max-width: 500px) {\n    h1 {\n      font-size: 2.2rem;\n    }\n  }\n\n  h2 {\n    margin: 1.5em 0 0.5em 0;\n    font-size: 2rem;\n  }\n  @media (max-width: 500px) {\n    h2 {\n      font-size: 1.8rem;\n    }\n  }\n\n  h3 {\n    margin: 1.5em 0 0.5em 0;\n    font-size: 1.8rem;\n    font-weight: 500;\n  }\n  @media (max-width: 500px) {\n    h3 {\n      font-size: 1.7rem;\n    }\n  }\n\n  h4 {\n    margin: 1.5em 0 0.5em 0;\n    font-size: 1.6rem;\n    font-weight: 500;\n  }\n\n  h5 {\n    margin: 1.5em 0 0.5em 0;\n    font-size: 1.4rem;\n    font-weight: 500;\n  }\n\n  h6 {\n    margin: 1.5em 0 0.5em 0;\n    font-size: 1.4rem;\n    font-weight: 500;\n  }\n\n  body {\n    background: #f4f8fb;\n  }\n`;\n\nconst IndexLayout: React.FunctionComponent<IndexProps> = props => {\n  return (\n    <div className={props.className}>\n      <Helmet>\n        <link rel=\"icon\" href={favicon} type=\"image/x-icon\" />\n      </Helmet>\n      <Global styles={GlobalStyles} />\n      {props.children}\n    </div>\n  );\n};\n\nexport default IndexLayout;\n","import { Link } from 'gatsby';\nimport Img from 'gatsby-image';\nimport * as _ from 'lodash';\nimport { lighten } from 'polished';\nimport * as React from 'react';\nimport styled from '@emotion/styled';\nimport { css } from '@emotion/core';\n\nimport { colors } from '../styles/colors';\nimport { PageContext } from '../templates/post';\n\nconst PostCardStyles = css`\n  flex: 1 1 300px;\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n  margin: 0 20px 40px;\n  min-height: 300px;\n  background: #fff center center;\n  background-size: cover;\n  border-radius: 5px;\n  box-shadow: rgba(39, 44, 49, 0.06) 8px 14px 38px, rgba(39, 44, 49, 0.03) 1px 3px 8px;\n  transition: all 0.5s ease;\n\n  :hover {\n    box-shadow: rgba(39, 44, 49, 0.07) 8px 28px 50px, rgba(39, 44, 49, 0.04) 1px 6px 12px;\n    transition: all 0.4s ease;\n    transform: translate3D(0, -1px, 0) scale(1.02);\n  }\n`;\n\nconst PostCardImageLink = css`\n  position: relative;\n  display: block;\n  overflow: hidden;\n  border-radius: 5px 5px 0 0;\n`;\n\nconst PostCardImage = styled.div`\n  width: auto;\n  height: 200px;\n  background: ${colors.lightgrey} no-repeat center center;\n  background-size: cover;\n`;\n\nconst PostCardContent = styled.div`\n  flex-grow: 1;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n`;\n\nconst PostCardContentLink = css`\n  position: relative;\n  flex-grow: 1;\n  display: block;\n  padding: 25px 25px 0;\n  color: ${colors.darkgrey};\n\n  :hover {\n    text-decoration: none;\n  }\n`;\n\nconst PostCardTags = styled.span`\n  display: block;\n  margin-bottom: 4px;\n  color: ${colors.midgrey};\n  font-size: 1.2rem;\n  line-height: 1.15em;\n  font-weight: 500;\n  letter-spacing: 0.5px;\n  text-transform: uppercase;\n`;\n\nconst PostCardTitle = styled.h2`\n  margin-top: 0;\n`;\n\nconst PostCardExcerpt = styled.section`\n  font-family: Georgia, serif;\n`;\n\nconst PostCardMeta = styled.footer`\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-end;\n  padding: 0 25px 25px;\n`;\n\nconst AuthorList = styled.ul`\n  display: flex;\n  flex-wrap: wrap-reverse;\n  margin: 0;\n  padding: 0;\n  list-style: none;\n`;\n\nconst AuthorListItem = styled.li`\n  position: relative;\n  flex-shrink: 0;\n  margin: 0;\n  padding: 0;\n\n  :nth-of-type(1) {\n    z-index: 10;\n  }\n  :nth-of-type(2) {\n    z-index: 9;\n  }\n  :nth-of-type(3) {\n    z-index: 8;\n  }\n  :nth-of-type(4) {\n    z-index: 7;\n  }\n  :nth-of-type(5) {\n    z-index: 6;\n  }\n  :nth-of-type(6) {\n    z-index: 5;\n  }\n  :nth-of-type(7) {\n    z-index: 4;\n  }\n  :nth-of-type(8) {\n    z-index: 3;\n  }\n  :nth-of-type(9) {\n    z-index: 2;\n  }\n  :nth-of-type(10) {\n    z-index: 1;\n  }\n  :hover .author-name-tooltip {\n    opacity: 1;\n    transform: translateY(0px);\n  }\n`;\n\nconst AuthorNameTooltip = styled.div`\n  position: absolute;\n  bottom: 105%;\n  z-index: 999;\n  display: block;\n  padding: 2px 8px;\n  color: white;\n  font-size: 1.2rem;\n  letter-spacing: 0.2px;\n  white-space: nowrap;\n  background: ${colors.darkgrey};\n  border-radius: 3px;\n  box-shadow: rgba(39, 44, 49, 0.08) 0 12px 26px, rgba(39, 44, 49, 0.03) 1px 3px 8px;\n  opacity: 0;\n  transition: all 0.3s cubic-bezier(0.4, 0.01, 0.165, 0.99);\n  transform: translateY(6px);\n  pointer-events: none;\n\n  @media (max-width: 650px) {\n    display: none;\n  }\n`;\n\nconst StaticAvatar = css`\n  display: block;\n  overflow: hidden;\n  margin: 0 -5px;\n  width: 34px;\n  height: 34px;\n  border: #fff 2px solid;\n  border-radius: 100%;\n`;\n\nconst AuthorProfileImage = styled.img`\n  display: block;\n  width: 100%;\n  height: 100%;\n  /* background: color(var(--lightgrey) l(+10%)); */\n  background: ${lighten('0.1', colors.lightgrey)}\n  border-radius: 100%;\n  object-fit: cover;\n`;\n\nconst ReadingTime = styled.span`\n  flex-shrink: 0;\n  margin-left: 20px;\n  color: ${colors.midgrey};\n  font-size: 1.2rem;\n  line-height: 33px;\n  font-weight: 500;\n  letter-spacing: 0.5px;\n  text-transform: uppercase;\n`;\n\nexport interface PostCardProps {\n  post: PageContext;\n}\n\nconst PostCard: React.FunctionComponent<PostCardProps> = ({ post }) => {\n  return (\n    <article\n      className={`post-card ${!post.frontmatter.image ? 'no-image' : ''}`}\n      css={PostCardStyles}\n    >\n      {post.frontmatter.image && (\n        <Link className=\"post-card-image-link\" css={PostCardImageLink} to={post.fields.slug}>\n          <PostCardImage className=\"post-card-image\">\n            {post.frontmatter.image &&\n              post.frontmatter.image.childImageSharp.fluid && (\n                <Img\n                  alt={`${post.frontmatter.title} cover image`}\n                  style={{ height: '100%' }}\n                  fluid={post.frontmatter.image.childImageSharp.fluid}\n                />\n              )}\n          </PostCardImage>\n        </Link>\n      )}\n      <PostCardContent className=\"post-card-content\">\n        <Link className=\"post-card-content-link\" css={PostCardContentLink} to={post.fields.slug}>\n          <header className=\"post-card-header\">\n            {post.frontmatter.tags && <PostCardTags>{post.frontmatter.tags[0]}</PostCardTags>}\n            <PostCardTitle>{post.frontmatter.title}</PostCardTitle>\n          </header>\n          <PostCardExcerpt>\n            <p>{post.excerpt}</p>\n          </PostCardExcerpt>\n        </Link>\n        <PostCardMeta className=\"post-card-meta\">\n          <AuthorList>\n            <AuthorListItem>\n              <AuthorNameTooltip className=\"author-name-tooltip\">\n                {post.frontmatter.author.id}\n              </AuthorNameTooltip>\n              <Link css={StaticAvatar} to={`/author/${_.kebabCase(post.frontmatter.author.id)}/`}>\n                <AuthorProfileImage\n                  src={post.frontmatter.author.avatar.children[0].fixed.src}\n                  alt={post.frontmatter.author.id}\n                />\n              </Link>\n            </AuthorListItem>\n          </AuthorList>\n          <ReadingTime>{post.timeToRead} min read</ReadingTime>\n        </PostCardMeta>\n      </PostCardContent>\n    </article>\n  );\n};\n\nexport default PostCard;\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import { graphql, Link, StaticQuery } from 'gatsby';\nimport * as React from 'react';\nimport { css } from '@emotion/core';\n\nimport config from '../../website-config';\n\nconst SiteNavLogoStyles = css`\n  flex-shrink: 0;\n  display: block;\n  margin-right: 24px;\n  padding: 11px 0;\n  color: #fff;\n  font-size: 1.7rem;\n  line-height: 1em;\n  font-weight: bold;\n  letter-spacing: -0.5px;\n\n  :hover {\n    text-decoration: none;\n  }\n\n  img {\n    display: block;\n    width: auto;\n    height: 21px;\n  }\n`;\n\ninterface SiteNavLogoProps {\n  logo?: {\n    childImageSharp: {\n      fixed: any;\n    };\n  };\n}\n\nconst SiteNavLogo = () => (\n  <StaticQuery\n    query={graphql`\n      query HeadingQuery {\n        logo: file(relativePath: { eq: \"img/logo.png\" }) {\n          childImageSharp {\n            fixed {\n              ...GatsbyImageSharpFixed\n            }\n          }\n        }\n      }\n    `}\n    // tslint:disable-next-line:react-this-binding-issue\n    render={(data: SiteNavLogoProps) => (\n      <Link className=\"site-nav-logo\" css={SiteNavLogoStyles} to=\"/\">\n        {data.logo ? (\n          <img src={data.logo.childImageSharp.fixed.src} alt={config.title} />\n        ) : (\n          config.title\n        )}\n      </Link>\n    )}\n  />\n);\n\nexport default SiteNavLogo;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","module.exports = __webpack_public_path__ + \"static/favicon-36e47e74810a0d8c32a77f495c49cf8e.ico\";"],"sourceRoot":""}